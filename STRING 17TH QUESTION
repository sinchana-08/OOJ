question 17
17. Design a class which represents a student. Every student record is made up of thefollowing
fields. i) Registration number (int) ii) Full Name (String) iii) Semester (short) iv) CGPA (float)

Write member functions to do the following.
a) Provide default and parameterized constructors to this class
b) Write display method which displays the record. Test the class by writing suitable main
method.
c) Create an array of student record to store minimum of 5 records in it.
Input the records and display them.
d. Perform the following operations by adding member functions to the program implemented in
the above question i) Sort the student records with respect to CGPA. ii) Sort the student record
with respect to name.

code
import java.util.Arrays;
import java.util.Scanner;

class Student {
    private int registrationNumber;
    private String fullName;
    private short semester;
    private float cgpa;

    // Default Constructor
    public Student() {
    }

    // Parameterized Constructor
    public Student(int registrationNumber, String fullName, short semester, float cgpa) {
        this.registrationNumber = registrationNumber;
        this.fullName = fullName;
        this.semester = semester;
        this.cgpa = cgpa;
    }

    // Display method to print the student record
    public void display() {
        System.out.println("Registration Number: " + registrationNumber);
        System.out.println("Full Name: " + fullName);
        System.out.println("Semester: " + semester);
        System.out.println("CGPA: " + cgpa);
        System.out.println();
    }

    // Getter for CGPA (for sorting purposes)
    public float getCGPA() {
        return cgpa;
    }

    // Getter for Full Name (for sorting purposes)
    public String getFullName() {
        return fullName;
    }

    // Static method to sort student records based on CGPA
    public static void sortStudentsByCGPA(Student[] students) {
        Arrays.sort(students, (s1, s2) -> Float.compare(s2.getCGPA(), s1.getCGPA()));
    }

    // Static method to sort student records based on Name
    public static void sortStudentsByName(Student[] students) {
        Arrays.sort(students, (s1, s2) -> s1.getFullName().compareToIgnoreCase(s2.getFullName()));
    }
}

public class StudentRecordDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // c) Create an array of student records to store a minimum of 5 records
        Student[] students = new Student[5];

        // Input student records
        for (int i = 0; i < students.length; i++) {
            System.out.println("Enter details for Student " + (i + 1) + ":");
            System.out.print("Registration Number: ");
            int regNumber = scanner.nextInt();
            scanner.nextLine(); // Consume the newline
            System.out.print("Full Name: ");
            String fullName = scanner.nextLine();
            System.out.print("Semester: ");
            short semester = scanner.nextShort();
            System.out.print("CGPA: ");
            float cgpa = scanner.nextFloat();

            // Creating a student object with the input details
            students[i] = new Student(regNumber, fullName, semester, cgpa);
        }

        // Display student records
        System.out.println("Student Records:");
        for (Student student : students) {
            student.display();
        }

        // d.i) Sort the student records with respect to CGPA
        Student.sortStudentsByCGPA(students);

        System.out.println("Student Records Sorted by CGPA:");
        for (Student student : students) {
            student.display();
        }

        // d.ii) Sort the student records with respect to name
        Student.sortStudentsByName(students);

        System.out.println("Student Records Sorted by Name:");
        for (Student student : students) {
            student.display();
        }
    }
}

output
Enter details for Student 1:
Registration Number: 2023
Full Name: siri sathish
Semester: 3
CGPA: 9.25
Enter details for Student 2:
Registration Number: 2024
Full Name: sharath ram
Semester: 3
CGPA: 9.5
Enter details for Student 3:
Registration Number: 2025
Full Name: raveen h
Semester: 5
CGPA: 9.8
Enter details for Student 4:
Registration Number: 2025
Full Name: suma
Semester: 6
CGPA: 9.6
Enter details for Student 5:
Registration Number: 2026
Full Name: dina
Semester: 4
CGPA: 7.8
Student Records:
Registration Number: 2023
Full Name: siri sathish
Semester: 3
CGPA: 9.25

Registration Number: 2024
Full Name: sharath ram
Semester: 3
CGPA: 9.5

Registration Number: 2025
Full Name: raveen h
Semester: 5
CGPA: 9.8

Registration Number: 2025
Full Name: suma
Semester: 6
CGPA: 9.6

Registration Number: 2026
Full Name: dina
Semester: 4
CGPA: 7.8

Student Records Sorted by CGPA:
Registration Number: 2025
Full Name: raveen h
Semester: 5
CGPA: 9.8

Registration Number: 2025
Full Name: suma
Semester: 6
CGPA: 9.6

Registration Number: 2024
Full Name: sharath ram
Semester: 3
CGPA: 9.5

Registration Number: 2023
Full Name: siri sathish
Semester: 3
CGPA: 9.25

Registration Number: 2026
Full Name: dina
Semester: 4
CGPA: 7.8

Student Records Sorted by Name:
Registration Number: 2026
Full Name: dina
Semester: 4
CGPA: 7.8

Registration Number: 2025
Full Name: raveen h
Semester: 5
CGPA: 9.8

Registration Number: 2024
Full Name: sharath ram
Semester: 3
CGPA: 9.5

Registration Number: 2023
Full Name: siri sathish
Semester: 3
CGPA: 9.25

Registration Number: 2025
Full Name: suma
Semester: 6
CGPA: 9.6
